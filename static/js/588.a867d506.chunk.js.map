{"version":3,"file":"static/js/588.a867d506.chunk.js","mappings":"yPAuBA,EAnBe,SAAC,GAA6C,IAA5CA,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,gBAI/BC,EAAWD,EAAgBE,MAAK,SAAAC,GAAC,OAAIJ,EAAOK,KAAOD,EAAEE,YAEzD,OADAJ,EAAWA,GAAYA,EAASA,UAE5B,iBAAKK,UAAWC,EAAAA,EAAAA,OAAhB,WACI,UAAC,KAAD,CAASC,GAAE,mBAAcT,EAAOK,IAAME,UAAWC,EAAAA,EAAAA,SAAjD,WACI,gBAAKE,IAAKV,EAAOW,QAASC,IAAI,SAC9B,iBAAML,UAAWC,EAAAA,EAAAA,WAAjB,SAAgCR,EAAOa,cAE1CX,GAAW,SAAC,KAAD,CAASO,GAAE,oBAAeP,GAAYK,UAAWC,EAAAA,EAAAA,SAAjD,sHAA4F,iBAAMD,UAAWC,EAAAA,EAAAA,SAAjB,wFAExG,mBAAQM,QAAS,kBAbLC,EAawBf,EAAOK,QAZ/CN,EAAagB,GADE,IAACA,GAaZ,8GCjBZ,EAA0B,yBCc1B,EAXgB,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,eAAgBf,EAAmC,EAAnCA,gBAAiBF,EAAkB,EAAlBA,aAC3CkB,EAAiBD,EAAeE,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAQpB,aAAcA,EAAcC,OAAQmB,EAAclB,gBAAiBA,GAAvBkB,EAAEd,OACnG,OACI,iBAAKE,UAAWC,EAAhB,WACI,qFACCS,M,kDCCPG,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WASD,OATCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACF,WACI,MAAyCC,KAAKC,MAAzCC,EAAL,EAAKA,OAAQC,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,aACzBD,EAAWD,GACXE,MACH,oBAED,WACI,OAAO,SAAC,GAAD,UAAaJ,KAAKC,YAC5B,EATCF,CAAyBM,EAAAA,WAqC/B,GAAeC,EAAAA,EAAAA,IACXC,EAAAA,GACAC,EAAAA,EAAAA,KA3BkB,SAACC,GACnB,IAAId,EAAiBc,EAAMC,MAAMA,MAAMC,QAAO,SAAAC,GAC1C,GAAGH,EAAMI,YAAYC,QAAQC,SAASH,EAAE5B,IACpC,OAAO4B,KAGXhC,EAAkBe,EAAeE,KAAI,SAAAC,GACrC,IAAI,IAAIkB,EAAE,EAAGA,EAAEP,EAAMQ,YAAYC,QAAQC,OAAQH,IAAK,CAClD,GAAIlB,EAAEd,KAAOyB,EAAMQ,YAAYC,QAAQF,GAAGI,KAAKpC,IAAMc,EAAEd,KAAOyB,EAAMQ,YAAYC,QAAQF,GAAGK,UAAUrC,GAKjG,MADa,CAACC,SAHEwB,EAAMQ,YAAYC,QAAQF,GAAGI,KAAKpC,KAAOyB,EAAMa,KAAKpB,OAClDO,EAAMQ,YAAYC,QAAQF,GAAGK,UAAUrC,GACvCyB,EAAMQ,YAAYC,QAAQF,GAAGI,KAAKpC,GAC5BH,SAAU4B,EAAMQ,YAAYC,QAAQF,GAAGhC,QAM3E,OADAJ,EAAkBA,EAAgB+B,QAAO,SAAAb,GAAC,QAAMA,KACzC,CACHH,eAAgBA,EAChBO,OAAQO,EAAMa,KAAKpB,OACnBtB,gBAAiBA,KAMI,CAACF,aAAAA,EAAAA,GAAcyB,WAAAA,EAAAA,GAAYC,aAAAA,EAAAA,KAFxD,CAGEL,I,mBCjDF,KAAgB,OAAS,uBAAuB,SAAW,yBAAyB,WAAa,2BAA2B,SAAW","sources":["components/Navbar/MainNavbar/Friends/Friend/Friend.jsx","webpack://new_app/./src/components/Navbar/MainNavbar/Friends/Friends.module.css?c054","components/Navbar/MainNavbar/Friends/Friends.jsx","components/Navbar/MainNavbar/Friends/FriendsContainer.jsx","webpack://new_app/./src/components/Navbar/MainNavbar/Friends/Friend/Friend.module.css?40c2"],"sourcesContent":["import React from 'react';\nimport c from './Friend.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Friend = ({deleteFriend, friend, existingDialogs}) => {\n    let removeFriend = (user_id) => {\n        deleteFriend(user_id);\n    }\n    let dialogId = existingDialogs.find(d => friend.id === d.friendId);\n    dialogId = dialogId && dialogId.dialogId;\n    return (\n        <div className={c.friend}>\n            <NavLink to={`/profile/${friend.id}`} className={c.userLink}>\n                <img src={friend.imgLink} alt='ava'/>\n                <span className={c.friendName}>{friend.username}</span>\n            </NavLink>\n            {dialogId ? <NavLink to={`/messages/${dialogId}`} className={c.writeMsg}>Написать сообщение</NavLink> : <span className={c.writeMsg}>Начать беседу</span>}\n\n            <button onClick={() => removeFriend(friend.id)}>Удалить из друзей</button>\n        </div>\n    )\n}\n\nexport default Friend;","// extracted by mini-css-extract-plugin\nexport default {\"friends\":\"Friends_friends__gIDfP\"};","import React from 'react';\nimport Friend from \"./Friend/Friend\";\nimport c from './Friends.module.css';\n\nconst Friends = ({currentFriends, existingDialogs, deleteFriend}) => {\n    let friendElements = currentFriends.map(f => <Friend deleteFriend={deleteFriend} friend={f} key={f.id} existingDialogs={existingDialogs}/>)\n    return (\n        <div className={c.friends}>\n            <h2>Мои друзья:</h2>\n            {friendElements}\n        </div>\n    )\n}\n\n\nexport default Friends;","import React from 'react';\nimport {connect} from 'react-redux';\nimport Friends from './Friends';\nimport {deleteFriend} from '../../../../redux/friends-reducer';\nimport {withAuthRedirect} from '../../../../hoc/AuthRedirect';\nimport {compose} from 'redux';\nimport {getDialogs} from '../../../../redux/dialogs-reducer';\nimport {requestUsers} from '../../../../redux/users-reducer';\n\n\nclass FriendsContainer extends React.Component {\n    componentDidMount() {\n        let {userId, getDialogs, requestUsers} = this.props\n        getDialogs(userId);\n        requestUsers();\n    }\n\n    render() {\n        return <Friends {...this.props} />\n    }\n}\n\nlet mapStateToProps = (state) => {\n    let currentFriends = state.users.users.filter(u => {\n        if(state.friendsPage.friends.includes(u.id)) {\n            return u;\n        }\n    });\n    let existingDialogs = currentFriends.map(f => {\n        for(let i=0; i<state.dialogsPage.dialogs.length; i++) {\n            if (f.id === state.dialogsPage.dialogs[i].user.id || f.id === state.dialogsPage.dialogs[i].companion.id) {\n                let friendId = (state.dialogsPage.dialogs[i].user.id === state.auth.userId)\n                                ? state.dialogsPage.dialogs[i].companion.id\n                                : state.dialogsPage.dialogs[i].user.id;\n                let result = {friendId, dialogId: state.dialogsPage.dialogs[i].id}\n                return result;\n            }\n        }\n    })\n    existingDialogs = existingDialogs.filter(f => !!f);\n    return {\n        currentFriends: currentFriends,\n        userId: state.auth.userId,\n        existingDialogs: existingDialogs\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {deleteFriend, getDialogs, requestUsers})\n)(FriendsContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"friend\":\"Friend_friend__R-dRL\",\"userLink\":\"Friend_userLink__XVv+7\",\"friendName\":\"Friend_friendName__g5O1C\",\"writeMsg\":\"Friend_writeMsg__ZvfYW\"};"],"names":["deleteFriend","friend","existingDialogs","dialogId","find","d","id","friendId","className","c","to","src","imgLink","alt","username","onClick","user_id","currentFriends","friendElements","map","f","FriendsContainer","this","props","userId","getDialogs","requestUsers","React","compose","withAuthRedirect","connect","state","users","filter","u","friendsPage","friends","includes","i","dialogsPage","dialogs","length","user","companion","auth"],"sourceRoot":""}